<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Khernet.UI"
                    xmlns:tb="http://www.hardcodet.net/taskbar"
                    xmlns:ucontrols="clr-namespace:Khernet.UI.Controls">
    
    <!--Default image-->
    <BitmapImage UriSource="pack://application:,,,/Khernet.UI.Container;component/blank.png" x:Key="DefaultImage"/>

    <!-- Defualt avatar image -->
    <BitmapImage UriSource="pack://application:,,,/Khernet.UI.Container;component/DefaultAvatar.png" x:Key="DefaultAvatar"/>

    <!-- Application logo -->
    <BitmapImage UriSource="pack://application:,,,/Khernet.UI.Container;component/Logo.png" x:Key="AppLogo"/>

    <!-- Application Name logo -->
    <BitmapImage UriSource="pack://application:,,,/Khernet.UI.Container;component/TitleLogo.png" x:Key="TitleLogo"/>

    <!-- Application title image -->
    <BitmapImage UriSource="pack://application:,,,/Khernet.UI.Container;component/HeaderLogo.png" x:Key="HeaderLogo"/>

    <!--Media model for playing audio files-->
    <local:MediaViewModel x:Key="MediaVM"/>

    <!--Emoji list view model-->
    <local:EmojiListCollection x:Key="emojiLightList"/>

        <!--Context meny for taskbar notify icon-->
    <ContextMenu x:Shared="false" x:Key="SysTrayMenu">
        <MenuItem Header="Show Window" Command="{Binding ShowWindowCommand}" />
        <MenuItem Header="Hide Window" Command="{Binding HideWindowCommand}" />
        <Separator />
        <MenuItem Header="Exit" Command="{Binding ExitApplicationCommand}" />
    </ContextMenu>

    <!-- The application's NotifyIcon started from App.xaml.cs, declares its own view model -->
    <tb:TaskbarIcon x:Key="notificationIcon"
                    IconSource="/Khernet;component/LogoIcon.ico"
                    ToolTipText="Double-click for window, right-click for menu"
                    DoubleClickCommand="{Binding ShowWindowCommand}"
                    ContextMenu="{StaticResource SysTrayMenu}">

        <!-- Assign data context-->
        <tb:TaskbarIcon.DataContext>
            <local:TaskbarIconViewModel />
        </tb:TaskbarIcon.DataContext>

    </tb:TaskbarIcon>

    <!--Context menu for text messages-->
    <ContextMenu x:Key="messageContextMenu">
        <MenuItem Header="Reply" Command="{Binding ReplyCommand}"/>
        <MenuItem Header="Resend" Command="{Binding ResendCommand}"/>
        <MenuItem Command="ApplicationCommands.Cut" Style="{DynamicResource MetroMenuItem}" />
        <MenuItem Command="ApplicationCommands.Copy" Style="{DynamicResource MetroMenuItem}" />
        <MenuItem Command="ApplicationCommands.Paste" Style="{DynamicResource MetroMenuItem}" />
    </ContextMenu>

    <!--Context menu for markdown messages-->
    <ContextMenu x:Key="markdownContextMenu">
        <MenuItem Header="Reply" Command="{Binding ReplyCommand}"/>
        <MenuItem Header="Resend" Command="{Binding ResendCommand}"/>
        <MenuItem Command="ApplicationCommands.Cut" Style="{DynamicResource MetroMenuItem}" />
        <MenuItem Command="ApplicationCommands.Copy" Style="{DynamicResource MetroMenuItem}" />
        <MenuItem Command="ApplicationCommands.Paste" Style="{DynamicResource MetroMenuItem}" />
        <MenuItem Header="Save as Markdown" Command="{Binding SaveMarkdownSourceCommand}" />
        <MenuItem Header="Save as HTML" Command="{Binding SaveHtmlSourceCommand}" />
    </ContextMenu>

    <!--Context menu for file messages-->
    <ContextMenu x:Key="fileMessageContextMenu">
        <MenuItem Header="Reply" Command="{Binding ReplyCommand}"/>
        <MenuItem Header="Resend" Command="{Binding ResendCommand}"/>
        <MenuItem Header="Save as..." Command="{Binding SaveCommand}"/>
    </ContextMenu>

    <!--Context menu for animation messages-->
    <ContextMenu x:Key="animationMessageContextMenu">
        <MenuItem Header="Reply" Command="{Binding ReplyCommand}"/>
        <MenuItem Header="Resend" Command="{Binding ResendCommand}"/>
        <MenuItem Header="Add GIF to gallery" Command="{Binding SaveAnimationCommand}"/>
        <MenuItem Header="Save as.." Command="{Binding SaveCommand}"/>
    </ContextMenu>


    <ucontrols:EmojiPaletteControl x:Key="emojiPalette" />
</ResourceDictionary>