<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                    xmlns:converters="clr-namespace:MahApps.Metro.Converters;assembly=MahApps.Metro"
                    xmlns:ucontrols="clr-namespace:Khernet.UI.Controls"
                    xmlns:markdig="clr-namespace:Markdig.Wpf;assembly=Markdig.Wpf">

    

    <Style x:Key="TextStyle2" TargetType="TextBox" BasedOn="{StaticResource MetroTextBox}">
        <Setter Property="Controls:ControlsHelper.FocusBorderBrush" Value="{DynamicResource FocusedTextboxBrush}"/>
        <Setter Property="Controls:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource OverTextboxBorderBrush}"/>
        <Setter Property="Controls:ControlsHelper.CornerRadius" Value="8"/>
        <Setter Property="FontFamily" Value="{StaticResource RobotoRegularFont}"/>
        <Setter Property="FontSize" Value="{StaticResource RegularFontSize}"/>
    </Style>

    <Style x:Key="PasswordStyle" TargetType="PasswordBox" BasedOn="{StaticResource MetroPasswordBox}">
        <Setter Property="Controls:ControlsHelper.FocusBorderBrush" Value="{DynamicResource FocusedTextboxBrush}"/>
        <Setter Property="Controls:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource OverTextboxBorderBrush}"/>
        <Setter Property="Controls:ControlsHelper.CornerRadius" Value="0" />
        <Setter Property="Margin" Value="0 5 0 5"/>
    </Style>

    <Style x:Key="txtStyle1" TargetType="TextBox" BasedOn="{StaticResource SearchMetroTextBox}">
        <Setter Property="Controls:ControlsHelper.FocusBorderBrush" Value="{DynamicResource FocusedTextboxBrush}"/>
        <Setter Property="Controls:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource OverTextboxBorderBrush}"/>
        <Setter Property="Controls:ControlsHelper.CornerRadius" Value="1" />
        <Setter Property="FontFamily" Value="{StaticResource RobotoRegularFont}"/>
        <Setter Property="Margin" Value="4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="enterGotFocus">
                            <DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                        </Storyboard>
                        <Storyboard x:Key="exitGotFocus">
                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                        </Storyboard>
                        <Storyboard x:Key="enterHasText">
                            <DoubleAnimation Duration="0:0:0.2" From="0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                        </Storyboard>
                        <Storyboard x:Key="exitHasText">
                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <AdornerDecorator x:Name="PART_WaitingForDataEffectAdornerDecorator" Visibility="Collapsed">
                            <Border 
                            x:Name="PART_WaitingForDataEffectGrid" 
                            BorderBrush="Transparent" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            Effect="{DynamicResource WaitingForDataEffect}" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            CornerRadius="10"/>
                        </AdornerDecorator>
                        <Border 
                        x:Name="Base" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Background="{TemplateBinding Background}" 
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                        CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius),Mode=OneWay,RelativeSource={RelativeSource TemplatedParent}}"/>
                        <Grid x:Name="PART_InnerGrid" Margin="6,2,2,2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="TextColumn" Width="*"/>
                                <ColumnDefinition x:Name="ButtonColumn" Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition x:Name="ButtonRow" Height="*"/>
                            </Grid.RowDefinitions>
                            <ScrollViewer x:Name="PART_ContentHost" BorderThickness="0" Background="{x:Null}" Grid.Column="0" IsTabStop="False" Margin="2" Grid.Row="1" VerticalAlignment="Stretch"/>
                            <TextBlock x:Name="PART_Message" Grid.Column="0" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="6,2" Padding="{TemplateBinding Padding}" Grid.Row="1" Style="{DynamicResource MahApps.Metro.Styles.MetroWatermarkTextBlock}" TextAlignment="{TemplateBinding Controls:TextBoxHelper.WatermarkAlignment}" TextWrapping="{TemplateBinding Controls:TextBoxHelper.WatermarkWrapping}" Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" TextTrimming="{TemplateBinding Controls:TextBoxHelper.WatermarkTrimming}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <ContentControl x:Name="PART_FloatingMessageContainer" Grid.Column="0" Grid.Row="0" Style="{DynamicResource FloatingMessageContainerStyle}">
                                <ContentControl.Height>
                                    <MultiBinding Converter="{converters:MathMultiplyConverter}" UpdateSourceTrigger="Default">
                                        <Binding ElementName="PART_FloatingMessage" Mode="OneWay" Path="ActualHeight"/>
                                        <Binding ElementName="PART_FloatingMessageContainer" Mode="OneWay" Path="Opacity"/>
                                    </MultiBinding>
                                </ContentControl.Height>
                                <TextBlock x:Name="PART_FloatingMessage" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Style="{DynamicResource MetroAutoCollapsingTextBlock}" TextAlignment="{TemplateBinding Controls:TextBoxHelper.WatermarkAlignment}" Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" TextTrimming="{TemplateBinding Controls:TextBoxHelper.WatermarkTrimming}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <TextBlock.RenderTransform>
                                        <TranslateTransform>
                                            <TranslateTransform.Y>
                                                <MultiBinding Converter="{converters:MathSubtractConverter}" UpdateSourceTrigger="Default">
                                                    <Binding ElementName="PART_FloatingMessage" Mode="OneWay" Path="ActualHeight"/>
                                                    <Binding ElementName="PART_FloatingMessageContainer" Mode="OneWay" Path="ActualHeight"/>
                                                </MultiBinding>
                                            </TranslateTransform.Y>
                                        </TranslateTransform>
                                    </TextBlock.RenderTransform>
                                </TextBlock>
                            </ContentControl>
                            <Button x:Name="PART_ClearText" ContentTemplate="{TemplateBinding Controls:TextBoxHelper.ButtonContentTemplate}" Content="{TemplateBinding Controls:TextBoxHelper.ButtonContent}" Grid.Column="1" Foreground="{TemplateBinding Foreground}" Focusable="False" FontSize="{TemplateBinding Controls:TextBoxHelper.ButtonFontSize}" FontFamily="{TemplateBinding Controls:TextBoxHelper.ButtonFontFamily}" IsTabStop="False" Controls:TextBoxHelper.IsClearTextButtonBehaviorEnabled="{Binding (Controls:TextBoxHelper.ClearTextButton), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Grid.Row="0" Grid.RowSpan="2" Style="{DynamicResource ChromelessButtonStyle}" Width="{TemplateBinding Controls:TextBoxHelper.ButtonWidth}">
                                <Button.Visibility>
                                    <Binding Mode="OneWay" Path="(Controls:TextBoxHelper.ClearTextButton)" RelativeSource="{RelativeSource TemplatedParent}">
                                        <Binding.Converter>
                                            <BooleanToVisibilityConverter/>
                                        </Binding.Converter>
                                    </Binding>
                                </Button.Visibility>
                            </Button>
                        </Grid>
                        <Border x:Name="DisabledVisualElement" BorderBrush="{DynamicResource ControlsDisabledBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource ControlsDisabledBrush}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="{Binding (Controls:ControlsHelper.DisabledVisualElementVisibility), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding (Controls:TextBoxHelper.ButtonsAlignment), RelativeSource={RelativeSource Self}}" Value="Left">
                            <Setter Property="Width" TargetName="ButtonColumn" Value="*"/>
                            <Setter Property="Grid.Column" TargetName="PART_ClearText" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="PART_ContentHost" Value="1"/>
                            <Setter Property="Grid.Column" TargetName="PART_Message" Value="1"/>
                            <Setter Property="Width" TargetName="TextColumn" Value="Auto"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="">
                            <Setter Property="Visibility" TargetName="PART_Message" Value="Visible"/>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsVisible, RelativeSource={RelativeSource Self}}" Value="True"/>
                                <Condition Binding="{Binding (Controls:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="True"/>
                                <Condition Binding="{Binding (Controls:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_FloatingMessageContainer">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0:0:0.2" From="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_FloatingMessageContainer">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2" From="1" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_FloatingMessageContainer">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_FloatingMessageContainer">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.2">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding (Controls:TextBoxHelper.ButtonsAlignment), RelativeSource={RelativeSource Self}}" Value="Right"/>
                                <Condition Binding="{Binding (Controls:TextBoxHelper.ClearTextButton), RelativeSource={RelativeSource Self}}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Grid.ColumnSpan" TargetName="PART_ContentHost" Value="2"/>
                            <Setter Property="Grid.ColumnSpan" TargetName="PART_Message" Value="2"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="Base" Value="{Binding (Controls:ControlsHelper.MouseOverBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.6"/>
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="IsEnabled" TargetName="PART_ClearText" Value="False"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="Base" Value="{Binding (Controls:ControlsHelper.FocusBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter Property="Foreground" TargetName="PART_FloatingMessage" Value="{DynamicResource AccentColorBrush}"/>
                            <Setter Property="Opacity" TargetName="PART_FloatingMessage" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" SourceName="PART_ClearText" Value="True">
                            <Setter Property="Background" TargetName="PART_ClearText" Value="{DynamicResource GrayBrush8}"/>
                            <Setter Property="Foreground" TargetName="PART_ClearText" Value="{DynamicResource AccentColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" SourceName="PART_ClearText" Value="True">
                            <Setter Property="Background" TargetName="PART_ClearText" Value="{DynamicResource BlackBrush}"/>
                            <Setter Property="Foreground" TargetName="PART_ClearText" Value="{DynamicResource WhiteBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Controls:TextBoxHelper.HasText" Value="False"/>
                                <Condition Property="IsFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <Trigger Property="Controls:TextBoxHelper.HasText" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2" From="0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsVisible" Value="True"/>
                                <Condition Property="Controls:TextBoxHelper.IsWaitingForData" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation AutoReverse="True" Timeline.DesiredFrameRate="30" Duration="0:0:2" From="0" RepeatBehavior="Forever" To="1" Storyboard.TargetProperty="(Effect).Opacity" Storyboard.TargetName="PART_WaitingForDataEffectGrid"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <Setter Property="Visibility" TargetName="PART_WaitingForDataEffectAdornerDecorator" Value="Visible"/>
                        </MultiTrigger>
                        <Trigger Property="Controls:TextBoxHelper.IsWaitingForData" Value="False">
                            <Setter Property="Visibility" TargetName="PART_WaitingForDataEffectAdornerDecorator" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="IconTextboxStyle" TargetType="TextBox" BasedOn="{StaticResource SearchMetroTextBox}">
        <Setter Property="Controls:ControlsHelper.FocusBorderBrush" Value="{DynamicResource FocusedTextboxBrush}"/>
        <Setter Property="Controls:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource OverTextboxBorderBrush}"/>
        <Setter Property="Controls:ControlsHelper.CornerRadius" Value="13" />
        <Setter Property="Margin" Value="4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="enterGotFocus">
                            <DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                        </Storyboard>
                        <Storyboard x:Key="exitGotFocus">
                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                        </Storyboard>
                        <Storyboard x:Key="enterHasText">
                            <DoubleAnimation Duration="0:0:0.2" From="0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                        </Storyboard>
                        <Storyboard x:Key="exitHasText">
                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <AdornerDecorator x:Name="PART_WaitingForDataEffectAdornerDecorator" Visibility="Collapsed">
                            <Border 
                            x:Name="PART_WaitingForDataEffectGrid" 
                            BorderBrush="Transparent" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            Effect="{DynamicResource WaitingForDataEffect}" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            CornerRadius="10"/>
                        </AdornerDecorator>
                        <Border 
                        x:Name="Base" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Background="{TemplateBinding Background}" 
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                        CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius),Mode=OneWay,RelativeSource={RelativeSource TemplatedParent}}"/>
                        <Grid x:Name="PART_InnerGrid" Margin="6,2,2,2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="TextColumn" Width="*"/>
                                <ColumnDefinition x:Name="ButtonColumn" Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition x:Name="ButtonRow" Height="*"/>
                            </Grid.RowDefinitions>
                            <ScrollViewer x:Name="PART_ContentHost" BorderThickness="0" Background="{x:Null}" Grid.Column="0" IsTabStop="False" Margin="2" Grid.Row="1" VerticalAlignment="Stretch"/>
                            <TextBlock x:Name="PART_Message" Grid.Column="0" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="6,2" Padding="{TemplateBinding Padding}" Grid.Row="1" Style="{DynamicResource MahApps.Metro.Styles.MetroWatermarkTextBlock}" TextAlignment="{TemplateBinding Controls:TextBoxHelper.WatermarkAlignment}" TextWrapping="{TemplateBinding Controls:TextBoxHelper.WatermarkWrapping}" Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" TextTrimming="{TemplateBinding Controls:TextBoxHelper.WatermarkTrimming}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <ContentControl x:Name="PART_FloatingMessageContainer" Grid.Column="0" Grid.Row="0" Style="{DynamicResource FloatingMessageContainerStyle}">
                                <ContentControl.Height>
                                    <MultiBinding Converter="{converters:MathMultiplyConverter}" UpdateSourceTrigger="Default">
                                        <Binding ElementName="PART_FloatingMessage" Mode="OneWay" Path="ActualHeight"/>
                                        <Binding ElementName="PART_FloatingMessageContainer" Mode="OneWay" Path="Opacity"/>
                                    </MultiBinding>
                                </ContentControl.Height>
                                <TextBlock x:Name="PART_FloatingMessage" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Style="{DynamicResource MetroAutoCollapsingTextBlock}" TextAlignment="{TemplateBinding Controls:TextBoxHelper.WatermarkAlignment}" Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" TextTrimming="{TemplateBinding Controls:TextBoxHelper.WatermarkTrimming}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <TextBlock.RenderTransform>
                                        <TranslateTransform>
                                            <TranslateTransform.Y>
                                                <MultiBinding Converter="{converters:MathSubtractConverter}" UpdateSourceTrigger="Default">
                                                    <Binding ElementName="PART_FloatingMessage" Mode="OneWay" Path="ActualHeight"/>
                                                    <Binding ElementName="PART_FloatingMessageContainer" Mode="OneWay" Path="ActualHeight"/>
                                                </MultiBinding>
                                            </TranslateTransform.Y>
                                        </TranslateTransform>
                                    </TextBlock.RenderTransform>
                                </TextBlock>
                            </ContentControl>
                            <Button x:Name="PART_ClearText" ContentTemplate="{TemplateBinding Controls:TextBoxHelper.ButtonContentTemplate}" Content="{TemplateBinding Controls:TextBoxHelper.ButtonContent}" Grid.Column="1" Foreground="{TemplateBinding Foreground}" Focusable="False" FontSize="{TemplateBinding Controls:TextBoxHelper.ButtonFontSize}" FontFamily="{TemplateBinding Controls:TextBoxHelper.ButtonFontFamily}" IsTabStop="False" Controls:TextBoxHelper.IsClearTextButtonBehaviorEnabled="{Binding (Controls:TextBoxHelper.ClearTextButton), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Grid.Row="0" Grid.RowSpan="2" Style="{DynamicResource ChromelessButtonStyle}" Width="{TemplateBinding Controls:TextBoxHelper.ButtonWidth}">
                                <Button.Visibility>
                                    <Binding Mode="OneWay" Path="(Controls:TextBoxHelper.ClearTextButton)" RelativeSource="{RelativeSource TemplatedParent}">
                                        <Binding.Converter>
                                            <BooleanToVisibilityConverter/>
                                        </Binding.Converter>
                                    </Binding>
                                </Button.Visibility>
                            </Button>
                        </Grid>
                        <Border x:Name="DisabledVisualElement" BorderBrush="{DynamicResource ControlsDisabledBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource ControlsDisabledBrush}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="{Binding (Controls:ControlsHelper.DisabledVisualElementVisibility), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding (Controls:TextBoxHelper.ButtonsAlignment), RelativeSource={RelativeSource Self}}" Value="Left">
                            <Setter Property="Width" TargetName="ButtonColumn" Value="*"/>
                            <Setter Property="Grid.Column" TargetName="PART_ClearText" Value="0"/>
                            <Setter Property="Grid.Column" TargetName="PART_ContentHost" Value="1"/>
                            <Setter Property="Grid.Column" TargetName="PART_Message" Value="1"/>
                            <Setter Property="Width" TargetName="TextColumn" Value="Auto"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="">
                            <Setter Property="Visibility" TargetName="PART_Message" Value="Visible"/>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsVisible, RelativeSource={RelativeSource Self}}" Value="True"/>
                                <Condition Binding="{Binding (Controls:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="True"/>
                                <Condition Binding="{Binding (Controls:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_FloatingMessageContainer">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0:0:0.2" From="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_FloatingMessageContainer">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.EnterActions>
                            <MultiDataTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2" From="1" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_FloatingMessageContainer">
                                            <DoubleAnimation.EasingFunction>
                                                <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_FloatingMessageContainer">
                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.2">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiDataTrigger.ExitActions>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding (Controls:TextBoxHelper.ButtonsAlignment), RelativeSource={RelativeSource Self}}" Value="Right"/>
                                <Condition Binding="{Binding (Controls:TextBoxHelper.ClearTextButton), RelativeSource={RelativeSource Self}}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Grid.ColumnSpan" TargetName="PART_ContentHost" Value="2"/>
                            <Setter Property="Grid.ColumnSpan" TargetName="PART_Message" Value="2"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="Base" Value="{Binding (Controls:ControlsHelper.MouseOverBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.6"/>
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="IsEnabled" TargetName="PART_ClearText" Value="False"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="Base" Value="{Binding (Controls:ControlsHelper.FocusBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter Property="Foreground" TargetName="PART_FloatingMessage" Value="{DynamicResource AccentColorBrush}"/>
                            <Setter Property="Opacity" TargetName="PART_FloatingMessage" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" SourceName="PART_ClearText" Value="True">
                            <Setter Property="Background" TargetName="PART_ClearText" Value="{DynamicResource GrayBrush8}"/>
                            <Setter Property="Foreground" TargetName="PART_ClearText" Value="{DynamicResource AccentColorBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" SourceName="PART_ClearText" Value="True">
                            <Setter Property="Background" TargetName="PART_ClearText" Value="{DynamicResource BlackBrush}"/>
                            <Setter Property="Foreground" TargetName="PART_ClearText" Value="{DynamicResource WhiteBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Controls:TextBoxHelper.HasText" Value="False"/>
                                <Condition Property="IsFocused" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                        </MultiTrigger>
                        <Trigger Property="Controls:TextBoxHelper.HasText" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2" From="0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsVisible" Value="True"/>
                                <Condition Property="Controls:TextBoxHelper.IsWaitingForData" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation AutoReverse="True" Timeline.DesiredFrameRate="30" Duration="0:0:2" From="0" RepeatBehavior="Forever" To="1" Storyboard.TargetProperty="(Effect).Opacity" Storyboard.TargetName="PART_WaitingForDataEffectGrid"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <Setter Property="Visibility" TargetName="PART_WaitingForDataEffectAdornerDecorator" Value="Visible"/>
                        </MultiTrigger>
                        <Trigger Property="Controls:TextBoxHelper.IsWaitingForData" Value="False">
                            <Setter Property="Visibility" TargetName="PART_WaitingForDataEffectAdornerDecorator" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TextBoxStyle11" TargetType="{x:Type TextBox}">
        <Setter Property="Controls:ControlsHelper.FocusBorderBrush" Value="{DynamicResource FocusedTextboxBrush}"/>
        <Setter Property="Controls:ControlsHelper.MouseOverBorderBrush" Value="{StaticResource OverTextboxBorderBrush}"/>
        <Setter Property="Background" Value="{StaticResource TextBoxBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBackgroundBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource RobotoRegularFont}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Controls:TextBoxHelper.ButtonContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <ContentControl x:Name="PART_PackIcon" Content="M42.5,22A12.5,12.5 0 0,1 55,34.5A12.5,12.5 0 0,1 42.5,47C40.14,47 37.92,46.34 36,45.24L26.97,54.27C25.8,55.44 23.9,55.44 22.73,54.27C21.56,53.1 21.56,51.2 22.73,50.03L31.8,40.96C30.66,39.08 30,36.86 30,34.5A12.5,12.5 0 0,1 42.5,22M42.5,26A8.5,8.5 0 0,0 34,34.5A8.5,8.5 0 0,0 42.5,43A8.5,8.5 0 0,0 51,34.5A8.5,8.5 0 0,0 42.5,26Z" HorizontalAlignment="Center" Height="{Binding (Controls:TextBoxHelper.ButtonWidth), Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TextBox}}}" Padding="3" Style="{DynamicResource PathIconContentControlStyle}" VerticalAlignment="Center" Width="{Binding (Controls:TextBoxHelper.ButtonWidth), Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type TextBox}}}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Controls:ControlsHelper.CornerRadius" Value="13"/>
        <Style.BasedOn>
            <Style TargetType="{x:Type TextBox}">
                <Setter Property="Controls:TextBoxHelper.ButtonTemplate" Value="{DynamicResource ChromelessButtonTemplate}"/>
                <Setter Property="Controls:TextBoxHelper.TextButton" Value="True"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="enterGotFocus">
                                    <DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                </Storyboard>
                                <Storyboard x:Key="exitGotFocus">
                                    <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                </Storyboard>
                                <Storyboard x:Key="enterHasText">
                                    <DoubleAnimation Duration="0:0:0.2" From="0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                </Storyboard>
                                <Storyboard x:Key="exitHasText">
                                    <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                </Storyboard>
                            </ControlTemplate.Resources>
                            <Grid>
                                <AdornerDecorator x:Name="PART_WaitingForDataEffectAdornerDecorator" Visibility="Collapsed">
                                    <Border x:Name="PART_WaitingForDataEffectGrid" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Effect="{DynamicResource WaitingForDataEffect}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </AdornerDecorator>
                                <Border 
                                    x:Name="Base" BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    Background="{TemplateBinding Background}" 
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    CornerRadius="{Binding (Controls:ControlsHelper.CornerRadius),Mode=OneWay,RelativeSource={RelativeSource TemplatedParent}}"
                                    />
                                <Grid x:Name="PART_InnerGrid" Margin="6,2,2,2">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition x:Name="TextColumn" Width="*"/>
                                        <ColumnDefinition x:Name="ButtonColumn" Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition x:Name="ButtonRow" Height="*"/>
                                    </Grid.RowDefinitions>
                                    <ScrollViewer x:Name="PART_ContentHost" 
                                                  BorderThickness="0" 
                                                  Background="{x:Null}" 
                                                  Grid.Column="0" 
                                                  IsTabStop="False" 
                                                  Margin="2" 
                                                  Grid.Row="1" 
                                                  VerticalAlignment="Stretch"/>
                                    <TextBlock x:Name="PART_Message" 
                                               Grid.Column="0" 
                                               Foreground="{TemplateBinding Foreground}" 
                                               HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                               Margin="6,2" 
                                               Padding="{TemplateBinding Padding}" 
                                               Grid.Row="1" 
                                               Style="{DynamicResource MahApps.Metro.Styles.MetroWatermarkTextBlock}" 
                                               TextAlignment="{TemplateBinding Controls:TextBoxHelper.WatermarkAlignment}" 
                                               TextWrapping="{TemplateBinding Controls:TextBoxHelper.WatermarkWrapping}" 
                                               Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" 
                                               TextTrimming="{TemplateBinding Controls:TextBoxHelper.WatermarkTrimming}" 
                                               Visibility="Collapsed" 
                                               VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    <ContentControl x:Name="PART_FloatingMessageContainer" 
                                                    Grid.Column="0" 
                                                    Grid.Row="0" 
                                                    Style="{DynamicResource FloatingMessageContainerStyle}">
                                        <ContentControl.Height>
                                            <MultiBinding Converter="{converters:MathMultiplyConverter}" UpdateSourceTrigger="Default">
                                                <Binding ElementName="PART_FloatingMessage" Mode="OneWay" Path="ActualHeight"/>
                                                <Binding ElementName="PART_FloatingMessageContainer" Mode="OneWay" Path="Opacity"/>
                                            </MultiBinding>
                                        </ContentControl.Height>
                                        <TextBlock x:Name="PART_FloatingMessage" 
                                                   Foreground="{TemplateBinding Foreground}" 
                                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                   Style="{DynamicResource MetroAutoCollapsingTextBlock}" 
                                                   TextAlignment="{TemplateBinding Controls:TextBoxHelper.WatermarkAlignment}" 
                                                   Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" 
                                                   TextTrimming="{TemplateBinding Controls:TextBoxHelper.WatermarkTrimming}" 
                                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                            <TextBlock.RenderTransform>
                                                <TranslateTransform>
                                                    <TranslateTransform.Y>
                                                        <MultiBinding Converter="{converters:MathSubtractConverter}" UpdateSourceTrigger="Default">
                                                            <Binding ElementName="PART_FloatingMessage" Mode="OneWay" Path="ActualHeight"/>
                                                            <Binding ElementName="PART_FloatingMessageContainer" Mode="OneWay" Path="ActualHeight"/>
                                                        </MultiBinding>
                                                    </TranslateTransform.Y>
                                                </TranslateTransform>
                                            </TextBlock.RenderTransform>
                                        </TextBlock>
                                    </ContentControl>
                                    <Button 
                                        x:Name="PART_ClearText" 
                                        ContentTemplate="{TemplateBinding Controls:TextBoxHelper.ButtonContentTemplate}" 
                                        Content="{TemplateBinding Controls:TextBoxHelper.ButtonContent}" 
                                        Grid.Column="1" 
                                        Foreground="{TemplateBinding Foreground}" 
                                        Focusable="False" 
                                        FontSize="{TemplateBinding Controls:TextBoxHelper.ButtonFontSize}" 
                                        FontFamily="{TemplateBinding Controls:TextBoxHelper.ButtonFontFamily}" 
                                        IsTabStop="False" 
                                        Controls:TextBoxHelper.IsClearTextButtonBehaviorEnabled="True" 
                                        Grid.Row="0" 
                                        Grid.RowSpan="2" 
                                        Style="{DynamicResource ChromelessButtonStyle}" 
                                        Template="{TemplateBinding Controls:TextBoxHelper.ButtonTemplate}" 
                                        Width="{TemplateBinding Controls:TextBoxHelper.ButtonWidth}"
                                        Margin="0,0,6,0"
                                        >
                                        <Button.Visibility>
                                            <Binding Mode="OneWay" Path="(Controls:TextBoxHelper.TextButton)" RelativeSource="{RelativeSource TemplatedParent}">
                                                <Binding.Converter>
                                                    <BooleanToVisibilityConverter/>
                                                </Binding.Converter>
                                            </Binding>
                                        </Button.Visibility>
                                    </Button>
                                </Grid>
                                <Border x:Name="DisabledVisualElement" BorderBrush="{DynamicResource ControlsDisabledBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource ControlsDisabledBrush}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="{Binding (Controls:ControlsHelper.DisabledVisualElementVisibility), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding (Controls:TextBoxHelper.ButtonsAlignment), RelativeSource={RelativeSource Self}}" Value="Left">
                                    <Setter Property="Width" TargetName="ButtonColumn" Value="*"/>
                                    <Setter Property="Grid.Column" TargetName="PART_ClearText" Value="0"/>
                                    <Setter Property="Grid.Column" TargetName="PART_ContentHost" Value="1"/>
                                    <Setter Property="Grid.Column" TargetName="PART_Message" Value="1"/>
                                    <Setter Property="Width" TargetName="TextColumn" Value="Auto"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="">
                                    <Setter Property="Visibility" TargetName="PART_Message" Value="Visible"/>
                                </DataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsVisible, RelativeSource={RelativeSource Self}}" Value="True"/>
                                        <Condition Binding="{Binding (Controls:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="True"/>
                                        <Condition Binding="{Binding (Controls:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_FloatingMessageContainer">
                                                    <DiscreteObjectKeyFrame KeyTime="0">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Visible</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                                <DoubleAnimation Duration="0:0:0.2" From="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_FloatingMessageContainer">
                                                    <DoubleAnimation.EasingFunction>
                                                        <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiDataTrigger.EnterActions>
                                    <MultiDataTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.2" From="1" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_FloatingMessageContainer">
                                                    <DoubleAnimation.EasingFunction>
                                                        <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                    </DoubleAnimation.EasingFunction>
                                                </DoubleAnimation>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_FloatingMessageContainer">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.2">
                                                        <DiscreteObjectKeyFrame.Value>
                                                            <Visibility>Collapsed</Visibility>
                                                        </DiscreteObjectKeyFrame.Value>
                                                    </DiscreteObjectKeyFrame>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiDataTrigger.ExitActions>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding (Controls:TextBoxHelper.ButtonsAlignment), RelativeSource={RelativeSource Self}}" Value="Right"/>
                                        <Condition Binding="{Binding (Controls:TextBoxHelper.TextButton), RelativeSource={RelativeSource Self}}" Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Grid.ColumnSpan" TargetName="PART_ContentHost" Value="2"/>
                                    <Setter Property="Grid.ColumnSpan" TargetName="PART_Message" Value="2"/>
                                </MultiDataTrigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderBrush" TargetName="Base" Value="{Binding (Controls:ControlsHelper.MouseOverBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.6"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsReadOnly" Value="True"/>
                                        <Condition Property="Controls:TextBoxHelper.ButtonCommand" Value="{x:Null}"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="IsEnabled" TargetName="PART_ClearText" Value="False"/>
                                </MultiTrigger>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter Property="BorderBrush" TargetName="Base" Value="{Binding (Controls:ControlsHelper.FocusBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                                    <Setter Property="Foreground" TargetName="PART_FloatingMessage" Value="{DynamicResource AccentColorBrush}"/>
                                    <Setter Property="Opacity" TargetName="PART_FloatingMessage" Value="1"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" SourceName="PART_ClearText" Value="True">
                                    <Setter Property="Background" TargetName="PART_ClearText" Value="{DynamicResource GrayBrush8}"/>
                                    <Setter Property="Foreground" TargetName="PART_ClearText" Value="{DynamicResource AccentColorBrush}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" SourceName="PART_ClearText" Value="True">
                                    <Setter Property="Background" TargetName="PART_ClearText" Value="{DynamicResource BlackBrush}"/>
                                    <Setter Property="Foreground" TargetName="PART_ClearText" Value="{DynamicResource WhiteBrush}"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsVisible" Value="True"/>
                                        <Condition Property="Controls:TextBoxHelper.IsWaitingForData" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation AutoReverse="True" Timeline.DesiredFrameRate="30" Duration="0:0:2" From="0" RepeatBehavior="Forever" To="1" Storyboard.TargetProperty="(Effect).Opacity" Storyboard.TargetName="PART_WaitingForDataEffectGrid"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiTrigger.EnterActions>
                                    <Setter Property="Visibility" TargetName="PART_WaitingForDataEffectAdornerDecorator" Value="Visible"/>
                                </MultiTrigger>
                                <Trigger Property="Controls:TextBoxHelper.IsWaitingForData" Value="False">
                                    <Setter Property="Visibility" TargetName="PART_WaitingForDataEffectAdornerDecorator" Value="Collapsed"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.BasedOn>
                    <Style TargetType="{x:Type TextBox}">
                        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
                        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="CaretBrush" Value="{DynamicResource BlackBrush}"/>
                        <Setter Property="ContextMenu" Value="{DynamicResource TextBoxMetroContextMenu}"/>
                        <Setter Property="Controls:ControlsHelper.FocusBorderBrush" Value="{DynamicResource TextBoxFocusBorderBrush}"/>
                        <Setter Property="Controls:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource TextBoxMouseOverBorderBrush}"/>
                        <Setter Property="Controls:TextBoxHelper.ButtonFontSize" Value="{DynamicResource ClearTextButtonFontSize}"/>
                        <Setter Property="Controls:TextBoxHelper.ButtonWidth" Value="22"/>
                        <Setter Property="Controls:TextBoxHelper.IsMonitoring" Value="True"/>
                        <Setter Property="Controls:TextBoxHelper.IsSpellCheckContextMenuEnabled" Value="{Binding (SpellCheck.IsEnabled), RelativeSource={RelativeSource Self}}"/>
                        <Setter Property="Controls:TextBoxHelper.WatermarkWrapping" Value="{Binding TextWrapping, Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
                        <Setter Property="FontFamily" Value="{DynamicResource ContentFontFamily}"/>
                        <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}"/>
                        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                        <Setter Property="MinHeight" Value="26"/>
                        <Setter Property="Padding" Value="0"/>
                        <Setter Property="SelectionBrush" Value="{DynamicResource HighlightBrush}"/>
                        <Setter Property="SnapsToDevicePixels" Value="True"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type TextBox}">
                                    <ControlTemplate.Resources>
                                        <Storyboard x:Key="enterGotFocus">
                                            <DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                        </Storyboard>
                                        <Storyboard x:Key="exitGotFocus">
                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                        </Storyboard>
                                        <Storyboard x:Key="enterHasText">
                                            <DoubleAnimation Duration="0:0:0.2" From="0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                        </Storyboard>
                                        <Storyboard x:Key="exitHasText">
                                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                        </Storyboard>
                                    </ControlTemplate.Resources>
                                    <Grid>
                                        <AdornerDecorator x:Name="PART_WaitingForDataEffectAdornerDecorator" Visibility="Collapsed">
                                            <Border x:Name="PART_WaitingForDataEffectGrid" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Effect="{DynamicResource WaitingForDataEffect}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </AdornerDecorator>
                                        <Border x:Name="Base" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        <Grid x:Name="PART_InnerGrid" Margin="2">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition x:Name="TextColumn" Width="*"/>
                                                <ColumnDefinition x:Name="ButtonColumn" Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition x:Name="ButtonRow" Height="*"/>
                                            </Grid.RowDefinitions>
                                            <ScrollViewer x:Name="PART_ContentHost" BorderThickness="0" Background="{x:Null}" Grid.Column="0" IsTabStop="False" Margin="2" Grid.Row="1" VerticalAlignment="Stretch"/>
                                            <TextBlock x:Name="PART_Message" Grid.Column="0" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="6,2" Padding="{TemplateBinding Padding}" Grid.Row="1" Style="{DynamicResource MahApps.Metro.Styles.MetroWatermarkTextBlock}" TextAlignment="{TemplateBinding Controls:TextBoxHelper.WatermarkAlignment}" TextWrapping="{TemplateBinding Controls:TextBoxHelper.WatermarkWrapping}" Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" TextTrimming="{TemplateBinding Controls:TextBoxHelper.WatermarkTrimming}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                            <ContentControl x:Name="PART_FloatingMessageContainer" Grid.Column="0" Grid.Row="0" Style="{DynamicResource FloatingMessageContainerStyle}">
                                                <ContentControl.Height>
                                                    <MultiBinding Converter="{converters:MathMultiplyConverter}" UpdateSourceTrigger="Default">
                                                        <Binding ElementName="PART_FloatingMessage" Mode="OneWay" Path="ActualHeight"/>
                                                        <Binding ElementName="PART_FloatingMessageContainer" Mode="OneWay" Path="Opacity"/>
                                                    </MultiBinding>
                                                </ContentControl.Height>
                                                <TextBlock x:Name="PART_FloatingMessage" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Style="{DynamicResource MetroAutoCollapsingTextBlock}" TextAlignment="{TemplateBinding Controls:TextBoxHelper.WatermarkAlignment}" Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" TextTrimming="{TemplateBinding Controls:TextBoxHelper.WatermarkTrimming}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                    <TextBlock.RenderTransform>
                                                        <TranslateTransform>
                                                            <TranslateTransform.Y>
                                                                <MultiBinding Converter="{converters:MathSubtractConverter}" UpdateSourceTrigger="Default">
                                                                    <Binding ElementName="PART_FloatingMessage" Mode="OneWay" Path="ActualHeight"/>
                                                                    <Binding ElementName="PART_FloatingMessageContainer" Mode="OneWay" Path="ActualHeight"/>
                                                                </MultiBinding>
                                                            </TranslateTransform.Y>
                                                        </TranslateTransform>
                                                    </TextBlock.RenderTransform>
                                                </TextBlock>
                                            </ContentControl>
                                            <Button x:Name="PART_ClearText" ContentTemplate="{TemplateBinding Controls:TextBoxHelper.ButtonContentTemplate}" Content="{TemplateBinding Controls:TextBoxHelper.ButtonContent}" Grid.Column="1" Foreground="{TemplateBinding Foreground}" Focusable="False" FontSize="{TemplateBinding Controls:TextBoxHelper.ButtonFontSize}" FontFamily="{TemplateBinding Controls:TextBoxHelper.ButtonFontFamily}" IsTabStop="False" Controls:TextBoxHelper.IsClearTextButtonBehaviorEnabled="{Binding (Controls:TextBoxHelper.ClearTextButton), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Grid.Row="0" Grid.RowSpan="2" Style="{DynamicResource ChromelessButtonStyle}" Width="{TemplateBinding Controls:TextBoxHelper.ButtonWidth}">
                                                <Button.Visibility>
                                                    <Binding Mode="OneWay" Path="(Controls:TextBoxHelper.ClearTextButton)" RelativeSource="{RelativeSource TemplatedParent}">
                                                        <Binding.Converter>
                                                            <BooleanToVisibilityConverter/>
                                                        </Binding.Converter>
                                                    </Binding>
                                                </Button.Visibility>
                                            </Button>
                                        </Grid>
                                        <Border x:Name="DisabledVisualElement" BorderBrush="{DynamicResource ControlsDisabledBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource ControlsDisabledBrush}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="{Binding (Controls:ControlsHelper.DisabledVisualElementVisibility), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <DataTrigger Binding="{Binding (Controls:TextBoxHelper.ButtonsAlignment), RelativeSource={RelativeSource Self}}" Value="Left">
                                            <Setter Property="Width" TargetName="ButtonColumn" Value="*"/>
                                            <Setter Property="Grid.Column" TargetName="PART_ClearText" Value="0"/>
                                            <Setter Property="Grid.Column" TargetName="PART_ContentHost" Value="1"/>
                                            <Setter Property="Grid.Column" TargetName="PART_Message" Value="1"/>
                                            <Setter Property="Width" TargetName="TextColumn" Value="Auto"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="">
                                            <Setter Property="Visibility" TargetName="PART_Message" Value="Visible"/>
                                        </DataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsVisible, RelativeSource={RelativeSource Self}}" Value="True"/>
                                                <Condition Binding="{Binding (Controls:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="True"/>
                                                <Condition Binding="{Binding (Controls:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <MultiDataTrigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_FloatingMessageContainer">
                                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                                <DiscreteObjectKeyFrame.Value>
                                                                    <Visibility>Visible</Visibility>
                                                                </DiscreteObjectKeyFrame.Value>
                                                            </DiscreteObjectKeyFrame>
                                                        </ObjectAnimationUsingKeyFrames>
                                                        <DoubleAnimation Duration="0:0:0.2" From="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_FloatingMessageContainer">
                                                            <DoubleAnimation.EasingFunction>
                                                                <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                            </DoubleAnimation.EasingFunction>
                                                        </DoubleAnimation>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </MultiDataTrigger.EnterActions>
                                            <MultiDataTrigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0:0:0.2" From="1" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_FloatingMessageContainer">
                                                            <DoubleAnimation.EasingFunction>
                                                                <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                                            </DoubleAnimation.EasingFunction>
                                                        </DoubleAnimation>
                                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_FloatingMessageContainer">
                                                            <DiscreteObjectKeyFrame KeyTime="0:0:0.2">
                                                                <DiscreteObjectKeyFrame.Value>
                                                                    <Visibility>Collapsed</Visibility>
                                                                </DiscreteObjectKeyFrame.Value>
                                                            </DiscreteObjectKeyFrame>
                                                        </ObjectAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </MultiDataTrigger.ExitActions>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding (Controls:TextBoxHelper.ButtonsAlignment), RelativeSource={RelativeSource Self}}" Value="Right"/>
                                                <Condition Binding="{Binding (Controls:TextBoxHelper.ClearTextButton), RelativeSource={RelativeSource Self}}" Value="False"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Grid.ColumnSpan" TargetName="PART_ContentHost" Value="2"/>
                                            <Setter Property="Grid.ColumnSpan" TargetName="PART_Message" Value="2"/>
                                        </MultiDataTrigger>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="BorderBrush" TargetName="Base" Value="{Binding (Controls:ControlsHelper.MouseOverBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.6"/>
                                        </Trigger>
                                        <Trigger Property="IsReadOnly" Value="True">
                                            <Setter Property="IsEnabled" TargetName="PART_ClearText" Value="False"/>
                                        </Trigger>
                                        <Trigger Property="IsFocused" Value="True">
                                            <Setter Property="BorderBrush" TargetName="Base" Value="{Binding (Controls:ControlsHelper.FocusBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                                            <Setter Property="Foreground" TargetName="PART_FloatingMessage" Value="{DynamicResource AccentColorBrush}"/>
                                            <Setter Property="Opacity" TargetName="PART_FloatingMessage" Value="1"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" SourceName="PART_ClearText" Value="True">
                                            <Setter Property="Background" TargetName="PART_ClearText" Value="{DynamicResource GrayBrush8}"/>
                                            <Setter Property="Foreground" TargetName="PART_ClearText" Value="{DynamicResource AccentColorBrush}"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" SourceName="PART_ClearText" Value="True">
                                            <Setter Property="Background" TargetName="PART_ClearText" Value="{DynamicResource BlackBrush}"/>
                                            <Setter Property="Foreground" TargetName="PART_ClearText" Value="{DynamicResource WhiteBrush}"/>
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="Controls:TextBoxHelper.HasText" Value="False"/>
                                                <Condition Property="IsFocused" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <MultiTrigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </MultiTrigger.EnterActions>
                                            <MultiTrigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </MultiTrigger.ExitActions>
                                        </MultiTrigger>
                                        <Trigger Property="Controls:TextBoxHelper.HasText" Value="True">
                                            <Trigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0:0:0.2" From="0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.EnterActions>
                                            <Trigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.ExitActions>
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsVisible" Value="True"/>
                                                <Condition Property="Controls:TextBoxHelper.IsWaitingForData" Value="True"/>
                                            </MultiTrigger.Conditions>
                                            <MultiTrigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation AutoReverse="True" Timeline.DesiredFrameRate="30" Duration="0:0:2" From="0" RepeatBehavior="Forever" To="1" Storyboard.TargetProperty="(Effect).Opacity" Storyboard.TargetName="PART_WaitingForDataEffectGrid"/>
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </MultiTrigger.EnterActions>
                                            <Setter Property="Visibility" TargetName="PART_WaitingForDataEffectAdornerDecorator" Value="Visible"/>
                                        </MultiTrigger>
                                        <Trigger Property="Controls:TextBoxHelper.IsWaitingForData" Value="False">
                                            <Setter Property="Visibility" TargetName="PART_WaitingForDataEffectAdornerDecorator" Value="Collapsed"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationErrorTemplate}"/>
                    </Style>
                </Style.BasedOn>
            </Style>
        </Style.BasedOn>
    </Style>

    <Style x:Key="BorderlessTextBox" TargetType="TextBox" BasedOn="{StaticResource MetroTextBox}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FontFamily" Value="{StaticResource RobotoRegularFont}"/>
        <Setter Property="FontSize" Value="{StaticResource RegularFontSize}"/>
    </Style>

    <Style x:Key="EditTextBox" TargetType="TextBox" BasedOn="{StaticResource MetroTextBox}">
        <Setter Property="BorderThickness" Value="0 0 0 1"/>
        <Setter Property="Controls:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource OverTextboxBorderBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource OverTextboxBorderBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource RobotoRegularFont}"/>
        <Setter Property="FontSize" Value="{StaticResource RegularFontSize}"/>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderThickness" Value="0 0 0 2"/>
                <Setter Property="Controls:ControlsHelper.FocusBorderBrush" Value="{StaticResource BlueBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="EditRichTextBox" TargetType="RichTextBox" BasedOn="{StaticResource MetroRichTextBox}">
        <Setter Property="BorderThickness" Value="0 0 0 1"/>
        <Setter Property="Controls:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource OverTextboxBorderBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource OverTextboxBorderBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource RobotoRegularFont}"/>
        <Setter Property="FontSize" Value="{StaticResource RegularFontSize}"/>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderThickness" Value="0 0 0 2"/>
                <Setter Property="Controls:ControlsHelper.FocusBorderBrush" Value="{StaticResource BlueBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RichTextBoxStyle1" TargetType="{x:Type ucontrols:MarkedRichTextBox}">
        <Style.Resources>
            <Style x:Key="{x:Type Hyperlink}" TargetType="{x:Type Hyperlink}">
                <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush}"/>
                <Setter Property="TextDecorations" Value="Underline"/>
                <Style.BasedOn>
                    <Style TargetType="{x:Type Hyperlink}">
                        <Setter Property="Foreground" Value="{DynamicResource HyperlinkBrush}"/>
                        <Style.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="{DynamicResource Deprecated_FadedTextBrush}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Style.BasedOn>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="{DynamicResource HighlightBrush}"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="True">
                        <Setter Property="Cursor" Value="Hand"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
        <Setter Property="AllowDrop" Value="True"/>
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CaretBrush" Value="{DynamicResource BlackBrush}"/>
        <Setter Property="ContextMenu" Value="{DynamicResource TextBoxMetroContextMenu}"/>
        <Setter Property="Controls:ControlsHelper.FocusBorderBrush" Value="{DynamicResource TextBoxFocusBorderBrush}"/>
        <Setter Property="Controls:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource TextBoxMouseOverBorderBrush}"/>
        <Setter Property="Controls:TextBoxHelper.IsSpellCheckContextMenuEnabled" Value="{Binding (SpellCheck.IsEnabled), RelativeSource={RelativeSource Self}}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="FontFamily" Value="{StaticResource RobotoRegularFont}"/>
        <Setter Property="FontSize" Value="{StaticResource RegularFontSize}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="MinHeight" Value="26"/>
        <Setter Property="MinWidth" Value="10"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="TextBlock.Text" Value="Luis"/>
        <Setter Property="SelectionBrush" Value="{DynamicResource HighlightBrush}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ucontrols:MarkedRichTextBox}">
                    <Grid>

                        <Border x:Name="Bd" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    Background="{TemplateBinding Background}" 
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <Grid>
                                <TextBlock Text="{Binding WaterMark,RelativeSource={RelativeSource TemplatedParent}}"
                                           Foreground="{StaticResource OverTextboxBorderBrush}"
                                           Margin="6 1 0 0"
                                           Padding="{TemplateBinding Padding}"
                                           Name="waterMarkTxt"/>
                                <ScrollViewer x:Name="PART_ContentHost" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              Padding="7"/>
                            </Grid>

                        </Border>
                        <Border x:Name="DisabledVisualElement" 
                                    BorderBrush="{DynamicResource ControlsDisabledBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    Background="{DynamicResource ControlsDisabledBrush}" 
                                    IsHitTestVisible="False" 
                                    Opacity="0" 
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                    Visibility="{Binding (Controls:ControlsHelper.DisabledVisualElementVisibility), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{Binding (Controls:ControlsHelper.MouseOverBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{Binding (Controls:ControlsHelper.FocusBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.6"/>
                        </Trigger>
                        <Trigger Property="HasDocument" Value="True">
                            <Setter Property="Visibility" Value="Hidden" TargetName="waterMarkTxt"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="richTextBoxStyle" TargetType="RichTextBox" BasedOn="{StaticResource MetroRichTextBox}">
        <Setter Property="FontFamily" Value="{StaticResource RobotoRegularFont}"/>
        <Setter Property="FontSize" Value="{StaticResource RegularFontSize}"/>
    </Style>

    <Style x:Key="richTextBoxStyle2" TargetType="{x:Type RichTextBox}">
        <Style.Resources>
            <Style BasedOn="{StaticResource {x:Type Hyperlink}}" TargetType="{x:Type Hyperlink}">
                <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush}" />
                <Setter Property="TextDecorations" Value="Underline" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="{DynamicResource HighlightBrush}" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="True">
                        <Setter Property="Cursor" Value="Hand" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
        <Setter Property="AllowDrop" Value="True" />
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource TextBoxBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CaretBrush" Value="{DynamicResource BlackBrush}" />
        <Setter Property="ContextMenu" Value="{DynamicResource TextBoxMetroContextMenu}" />
        <Setter Property="Controls:ControlsHelper.FocusBorderBrush" Value="{DynamicResource TextBoxFocusBorderBrush}" />
        <Setter Property="Controls:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource TextBoxMouseOverBorderBrush}" />
        <Setter Property="Controls:TextBoxHelper.IsSpellCheckContextMenuEnabled" Value="{Binding RelativeSource={RelativeSource Self}, Path=(SpellCheck.IsEnabled)}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="FontFamily" Value="{DynamicResource ContentFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="MinHeight" Value="26" />
        <Setter Property="MinWidth" Value="10" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
        <Setter Property="SelectionBrush" Value="{DynamicResource HighlightBrush}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBoxBase}">
                    <Grid>
                        <Border x:Name="Bd"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <Border x:Name="DisabledVisualElement"
                                Background="{DynamicResource ControlsDisabledBrush}"
                                BorderBrush="{DynamicResource ControlsDisabledBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                IsHitTestVisible="False"
                                Opacity="0"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.DisabledVisualElementVisibility), Mode=OneWay}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.MouseOverBorderBrush)}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(Controls:ControlsHelper.FocusBorderBrush)}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="DisabledVisualElement" Property="Opacity" Value="0.6" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type FlowDocument}" 
               x:Key="MyStyle"
               >
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="{StaticResource BlueBrush}"/>
        <Setter Property="FontFamily" Value="{DynamicResource RobotoRegularFont}"/>
    </Style>

    <Style TargetType="{x:Type Control}" >
        <Setter Property="FontFamily" Value="{DynamicResource RobotoRegularFont}"/>
    </Style>

    <ControlTemplate x:Key="TextBoxControlTemplate1" TargetType="{x:Type TextBox}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="enterGotFocus">
                <DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
            </Storyboard>
            <Storyboard x:Key="exitGotFocus">
                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
            </Storyboard>
            <Storyboard x:Key="enterHasText">
                <DoubleAnimation Duration="0:0:0.2" From="0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
            </Storyboard>
            <Storyboard x:Key="exitHasText">
                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid>
            <AdornerDecorator x:Name="PART_WaitingForDataEffectAdornerDecorator" Visibility="Collapsed">
                <Border x:Name="PART_WaitingForDataEffectGrid" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Effect="{DynamicResource WaitingForDataEffect}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </AdornerDecorator>
            <Border BorderBrush="Transparent"
                        Background="Transparent"
                        Name="lightBorder"
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        CornerRadius="2">
                <Border x:Name="Base" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Background="{TemplateBinding Background}" 
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                        CornerRadius="2"/>
            </Border>
            <Grid x:Name="PART_InnerGrid" Margin="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="TextColumn" Width="*"/>
                    <ColumnDefinition x:Name="ButtonColumn" Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition x:Name="ButtonRow" Height="*"/>
                </Grid.RowDefinitions>
                <ScrollViewer x:Name="PART_ContentHost" BorderThickness="0" Background="{x:Null}" Grid.Column="0" IsTabStop="False" Margin="2" Grid.Row="1" VerticalAlignment="Stretch"/>
                <TextBlock x:Name="PART_Message" Grid.Column="0" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="6,2" Padding="{TemplateBinding Padding}" Grid.Row="1" Style="{DynamicResource MahApps.Metro.Styles.MetroWatermarkTextBlock}" TextAlignment="{TemplateBinding Controls:TextBoxHelper.WatermarkAlignment}" TextWrapping="{TemplateBinding Controls:TextBoxHelper.WatermarkWrapping}" Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" TextTrimming="{TemplateBinding Controls:TextBoxHelper.WatermarkTrimming}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                <ContentControl x:Name="PART_FloatingMessageContainer" Grid.Column="0" Grid.Row="0" Style="{DynamicResource FloatingMessageContainerStyle}">
                    <ContentControl.Height>
                        <MultiBinding Converter="{converters:MathMultiplyConverter}" UpdateSourceTrigger="Default">
                            <Binding ElementName="PART_FloatingMessage" Mode="OneWay" Path="ActualHeight"/>
                            <Binding ElementName="PART_FloatingMessageContainer" Mode="OneWay" Path="Opacity"/>
                        </MultiBinding>
                    </ContentControl.Height>
                    <TextBlock x:Name="PART_FloatingMessage" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Style="{DynamicResource MetroAutoCollapsingTextBlock}" TextAlignment="{TemplateBinding Controls:TextBoxHelper.WatermarkAlignment}" Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" TextTrimming="{TemplateBinding Controls:TextBoxHelper.WatermarkTrimming}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        <TextBlock.RenderTransform>
                            <TranslateTransform>
                                <TranslateTransform.Y>
                                    <MultiBinding Converter="{converters:MathSubtractConverter}" UpdateSourceTrigger="Default">
                                        <Binding ElementName="PART_FloatingMessage" Mode="OneWay" Path="ActualHeight"/>
                                        <Binding ElementName="PART_FloatingMessageContainer" Mode="OneWay" Path="ActualHeight"/>
                                    </MultiBinding>
                                </TranslateTransform.Y>
                            </TranslateTransform>
                        </TextBlock.RenderTransform>
                    </TextBlock>
                </ContentControl>
                <Button x:Name="PART_ClearText" ContentTemplate="{TemplateBinding Controls:TextBoxHelper.ButtonContentTemplate}" Content="{TemplateBinding Controls:TextBoxHelper.ButtonContent}" Grid.Column="1" Foreground="{TemplateBinding Foreground}" Focusable="False" FontSize="{TemplateBinding Controls:TextBoxHelper.ButtonFontSize}" FontFamily="{TemplateBinding Controls:TextBoxHelper.ButtonFontFamily}" IsTabStop="False" Controls:TextBoxHelper.IsClearTextButtonBehaviorEnabled="{Binding (Controls:TextBoxHelper.ClearTextButton), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Grid.Row="0" Grid.RowSpan="2" Style="{DynamicResource ChromelessButtonStyle}" Width="{TemplateBinding Controls:TextBoxHelper.ButtonWidth}">
                    <Button.Visibility>
                        <Binding Mode="OneWay" Path="(Controls:TextBoxHelper.ClearTextButton)" RelativeSource="{RelativeSource TemplatedParent}">
                            <Binding.Converter>
                                <BooleanToVisibilityConverter/>
                            </Binding.Converter>
                        </Binding>
                    </Button.Visibility>
                </Button>
            </Grid>
            <Border x:Name="DisabledVisualElement" 
                        BorderBrush="{DynamicResource ControlsDisabledBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Background="{DynamicResource ControlsDisabledBrush}" 
                        IsHitTestVisible="False" 
                        Opacity="0" 
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                        Visibility="{Binding (Controls:ControlsHelper.DisabledVisualElementVisibility), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding (Controls:TextBoxHelper.ButtonsAlignment), RelativeSource={RelativeSource Self}}" Value="Left">
                <Setter Property="Width" TargetName="ButtonColumn" Value="*"/>
                <Setter Property="Grid.Column" TargetName="PART_ClearText" Value="0"/>
                <Setter Property="Grid.Column" TargetName="PART_ContentHost" Value="1"/>
                <Setter Property="Grid.Column" TargetName="PART_Message" Value="1"/>
                <Setter Property="Width" TargetName="TextColumn" Value="Auto"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="">
                <Setter Property="Visibility" TargetName="PART_Message" Value="Visible"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsVisible, RelativeSource={RelativeSource Self}}" Value="True"/>
                    <Condition Binding="{Binding (Controls:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="True"/>
                    <Condition Binding="{Binding (Controls:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_FloatingMessageContainer">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimation Duration="0:0:0.2" From="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_FloatingMessageContainer">
                                <DoubleAnimation.EasingFunction>
                                    <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiDataTrigger.EnterActions>
                <MultiDataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.2" From="1" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_FloatingMessageContainer">
                                <DoubleAnimation.EasingFunction>
                                    <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_FloatingMessageContainer">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiDataTrigger.ExitActions>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding (Controls:TextBoxHelper.ButtonsAlignment), RelativeSource={RelativeSource Self}}" Value="Right"/>
                    <Condition Binding="{Binding (Controls:TextBoxHelper.ClearTextButton), RelativeSource={RelativeSource Self}}" Value="False"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Grid.ColumnSpan" TargetName="PART_ContentHost" Value="2"/>
                <Setter Property="Grid.ColumnSpan" TargetName="PART_Message" Value="2"/>
            </MultiDataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" TargetName="Base" Value="{Binding (Controls:ControlsHelper.MouseOverBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.6"/>
            </Trigger>
            <Trigger Property="IsReadOnly" Value="True">
                <Setter Property="IsEnabled" TargetName="PART_ClearText" Value="False"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" TargetName="Base" Value="{Binding (Controls:ControlsHelper.FocusBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                <Setter Property="Foreground" TargetName="PART_FloatingMessage" Value="{DynamicResource AccentColorBrush}"/>
                <Setter Property="Opacity" TargetName="PART_FloatingMessage" Value="1"/>
                <Setter Property="BorderBrush" TargetName="lightBorder" Value="{StaticResource GlowLighterBlue}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" SourceName="PART_ClearText" Value="True">
                <Setter Property="Background" TargetName="PART_ClearText" Value="{DynamicResource GrayBrush8}"/>
                <Setter Property="Foreground" TargetName="PART_ClearText" Value="{DynamicResource AccentColorBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" SourceName="PART_ClearText" Value="True">
                <Setter Property="Background" TargetName="PART_ClearText" Value="{DynamicResource BlackBrush}"/>
                <Setter Property="Foreground" TargetName="PART_ClearText" Value="{DynamicResource WhiteBrush}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Controls:TextBoxHelper.HasText" Value="False"/>
                    <Condition Property="IsFocused" Value="True"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>
            <Trigger Property="Controls:TextBoxHelper.HasText" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.2" From="0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsVisible" Value="True"/>
                    <Condition Property="Controls:TextBoxHelper.IsWaitingForData" Value="True"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation AutoReverse="True" Timeline.DesiredFrameRate="30" Duration="0:0:2" From="0" RepeatBehavior="Forever" To="1" Storyboard.TargetProperty="(Effect).Opacity" Storyboard.TargetName="PART_WaitingForDataEffectGrid"/>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <Setter Property="Visibility" TargetName="PART_WaitingForDataEffectAdornerDecorator" Value="Visible"/>
            </MultiTrigger>
            <Trigger Property="Controls:TextBoxHelper.IsWaitingForData" Value="False">
                <Setter Property="Visibility" TargetName="PART_WaitingForDataEffectAdornerDecorator" Value="Collapsed"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="PasswordBoxControlTemplate1" TargetType="{x:Type PasswordBox}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="enterGotFocus">
                <DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
            </Storyboard>
            <Storyboard x:Key="exitGotFocus">
                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
            </Storyboard>
            <Storyboard x:Key="enterHasText">
                <DoubleAnimation Duration="0:0:0.2" From="0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
            </Storyboard>
            <Storyboard x:Key="exitHasText">
                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid>
            <AdornerDecorator x:Name="PART_WaitingForDataEffectAdornerDecorator" Visibility="Collapsed">
                <Border x:Name="PART_WaitingForDataEffectGrid" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Effect="{DynamicResource WaitingForDataEffect}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </AdornerDecorator>
            <Border BorderBrush="Transparent"
                        Background="Transparent"
                        Name="lightBorder"
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        CornerRadius="2">
                <Border x:Name="Base" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Background="{TemplateBinding Background}" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            CornerRadius="2"/>
            </Border>
            <Grid Margin="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="TextColumn" Width="*"/>
                    <ColumnDefinition x:Name="CapsLockColumn" Width="Auto"/>
                    <ColumnDefinition x:Name="ButtonColumn" Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition x:Name="ButtonRow" Height="*"/>
                </Grid.RowDefinitions>
                <ScrollViewer x:Name="PART_ContentHost" BorderThickness="0" Background="{x:Null}" Grid.Column="0" IsTabStop="False" Margin="2" Grid.Row="1" VerticalAlignment="Stretch"/>
                <TextBlock x:Name="PART_Message" Grid.Column="0" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="6,2" Padding="{TemplateBinding Padding}" Grid.Row="1" Style="{DynamicResource MahApps.Metro.Styles.MetroWatermarkTextBlock}" TextAlignment="{TemplateBinding Controls:TextBoxHelper.WatermarkAlignment}" Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" TextTrimming="{TemplateBinding Controls:TextBoxHelper.WatermarkTrimming}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                <ContentControl x:Name="PART_FloatingMessageContainer" Grid.Column="0" Grid.Row="0" Style="{DynamicResource FloatingMessageContainerStyle}">
                    <ContentControl.Height>
                        <MultiBinding Converter="{converters:MathMultiplyConverter}" UpdateSourceTrigger="Default">
                            <Binding ElementName="PART_FloatingMessage" Mode="OneWay" Path="ActualHeight"/>
                            <Binding ElementName="PART_FloatingMessageContainer" Mode="OneWay" Path="Opacity"/>
                        </MultiBinding>
                    </ContentControl.Height>
                    <TextBlock x:Name="PART_FloatingMessage" Foreground="{TemplateBinding Foreground}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Style="{DynamicResource MetroAutoCollapsingTextBlock}" TextAlignment="{TemplateBinding Controls:TextBoxHelper.WatermarkAlignment}" Text="{TemplateBinding Controls:TextBoxHelper.Watermark}" TextTrimming="{TemplateBinding Controls:TextBoxHelper.WatermarkTrimming}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        <TextBlock.RenderTransform>
                            <TranslateTransform>
                                <TranslateTransform.Y>
                                    <MultiBinding Converter="{converters:MathSubtractConverter}" UpdateSourceTrigger="Default">
                                        <Binding ElementName="PART_FloatingMessage" Mode="OneWay" Path="ActualHeight"/>
                                        <Binding ElementName="PART_FloatingMessageContainer" Mode="OneWay" Path="ActualHeight"/>
                                    </MultiBinding>
                                </TranslateTransform.Y>
                            </TranslateTransform>
                        </TextBlock.RenderTransform>
                    </TextBlock>
                </ContentControl>
                <ContentPresenter x:Name="PART_CapsLockIndicator" Content="{Binding (Controls:PasswordBoxHelper.CapsLockIcon), Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Grid.Column="1" TextElement.Foreground="{DynamicResource ControlsValidationBrush}" HorizontalAlignment="Right" Margin="1" Grid.Row="0" Grid.RowSpan="2" ToolTip="{Binding (Controls:PasswordBoxHelper.CapsLockWarningToolTip), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed" VerticalAlignment="Center"/>
                <Button x:Name="PART_ClearText" ContentTemplate="{TemplateBinding Controls:TextBoxHelper.ButtonContentTemplate}" Content="{TemplateBinding Controls:TextBoxHelper.ButtonContent}" Grid.Column="2" Foreground="{TemplateBinding Foreground}" Focusable="False" FontSize="{TemplateBinding Controls:TextBoxHelper.ButtonFontSize}" FontFamily="{TemplateBinding Controls:TextBoxHelper.ButtonFontFamily}" IsTabStop="False" Controls:TextBoxHelper.IsClearTextButtonBehaviorEnabled="{Binding (Controls:TextBoxHelper.ClearTextButton), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Grid.Row="0" Grid.RowSpan="2" Style="{DynamicResource ChromelessButtonStyle}" Width="{TemplateBinding Controls:TextBoxHelper.ButtonWidth}">
                    <Button.Visibility>
                        <Binding Mode="OneWay" Path="(Controls:TextBoxHelper.ClearTextButton)" RelativeSource="{RelativeSource TemplatedParent}">
                            <Binding.Converter>
                                <BooleanToVisibilityConverter/>
                            </Binding.Converter>
                        </Binding>
                    </Button.Visibility>
                </Button>
            </Grid>
            <Border x:Name="DisabledVisualElement" BorderBrush="{DynamicResource ControlsDisabledBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource ControlsDisabledBrush}" IsHitTestVisible="False" Opacity="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Visibility="{Binding (Controls:ControlsHelper.DisabledVisualElementVisibility), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding (Controls:TextBoxHelper.ButtonsAlignment), RelativeSource={RelativeSource Self}}" Value="Left">
                <Setter Property="Width" TargetName="ButtonColumn" Value="*"/>
                <Setter Property="Grid.Column" TargetName="PART_ClearText" Value="0"/>
                <Setter Property="Grid.Column" TargetName="PART_ContentHost" Value="2"/>
                <Setter Property="Grid.Column" TargetName="PART_FloatingMessageContainer" Value="2"/>
                <Setter Property="Grid.Column" TargetName="PART_Message" Value="2"/>
                <Setter Property="Width" TargetName="TextColumn" Value="Auto"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Password, Mode=OneWay, RelativeSource={RelativeSource Self}}" Value="">
                <Setter Property="Visibility" TargetName="PART_Message" Value="Visible"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsVisible, RelativeSource={RelativeSource Self}}" Value="True"/>
                    <Condition Binding="{Binding (Controls:TextBoxHelper.UseFloatingWatermark), RelativeSource={RelativeSource Self}}" Value="True"/>
                    <Condition Binding="{Binding (Controls:TextBoxHelper.HasText), RelativeSource={RelativeSource Self}}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_FloatingMessageContainer">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <DoubleAnimation Duration="0:0:0.2" From="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_FloatingMessageContainer">
                                <DoubleAnimation.EasingFunction>
                                    <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiDataTrigger.EnterActions>
                <MultiDataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.2" From="1" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_FloatingMessageContainer">
                                <DoubleAnimation.EasingFunction>
                                    <ExponentialEase EasingMode="EaseInOut" Exponent="2"/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="PART_FloatingMessageContainer">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiDataTrigger.ExitActions>
            </MultiDataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" TargetName="Base" Value="{Binding (Controls:ControlsHelper.MouseOverBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" TargetName="DisabledVisualElement" Value="0.6"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" TargetName="Base" Value="{Binding (Controls:ControlsHelper.FocusBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                <Setter Property="Foreground" TargetName="PART_FloatingMessage" Value="{DynamicResource AccentColorBrush}"/>
                <Setter Property="Opacity" TargetName="PART_FloatingMessage" Value="1"/>
                <Setter Property="BorderBrush" TargetName="lightBorder" Value="{StaticResource GlowLighterBlue}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" SourceName="PART_ClearText" Value="True">
                <Setter Property="Background" TargetName="PART_ClearText" Value="{DynamicResource GrayBrush8}"/>
                <Setter Property="Foreground" TargetName="PART_ClearText" Value="{DynamicResource AccentColorBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" SourceName="PART_ClearText" Value="True">
                <Setter Property="Background" TargetName="PART_ClearText" Value="{DynamicResource BlackBrush}"/>
                <Setter Property="Foreground" TargetName="PART_ClearText" Value="{DynamicResource WhiteBrush}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Controls:TextBoxHelper.HasText" Value="False"/>
                    <Condition Property="IsFocused" Value="True"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.2" To="0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.ExitActions>
            </MultiTrigger>
            <Trigger Property="Controls:TextBoxHelper.HasText" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.2" From="0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Message"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
                <Setter Property="Visibility" TargetName="PART_Message" Value="Visible"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsVisible" Value="True"/>
                    <Condition Property="Controls:TextBoxHelper.IsWaitingForData" Value="True"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation AutoReverse="True" Timeline.DesiredFrameRate="30" Duration="0:0:2" From="0" RepeatBehavior="Forever" To="1" Storyboard.TargetProperty="(Effect).Opacity" Storyboard.TargetName="PART_WaitingForDataEffectGrid"/>
                        </Storyboard>
                    </BeginStoryboard>
                </MultiTrigger.EnterActions>
                <Setter Property="Visibility" TargetName="PART_WaitingForDataEffectAdornerDecorator" Value="Visible"/>
            </MultiTrigger>
            <Trigger Property="Controls:TextBoxHelper.IsWaitingForData" Value="False">
                <Setter Property="Visibility" TargetName="PART_WaitingForDataEffectAdornerDecorator" Value="Collapsed"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>