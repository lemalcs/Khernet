<UserControl x:Class="Khernet.UI.Controls.ImageItemControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Khernet.UI.Controls"
             xmlns:vm="clr-namespace:Khernet.UI"
             xmlns:conv="clr-namespace:Khernet.UI.Converters"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:depend="clr-namespace:Khernet.UI.DependencyProperties"
             xmlns:ucontrols="clr-namespace:Khernet.UI.Controls"
             xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             d:DataContext="{d:DesignInstance {x:Type vm:ImageChatMessageDesignModel}, IsDesignTimeCreatable=True}"
             mc:Ignorable="d">
    
    <Border CornerRadius="5"
            Cursor="{Binding IsFileLoaded,Converter={conv:BoolToCursorConverter}}"
            HorizontalAlignment="Left"
            Background="{StaticResource TransparentBlackBrush}">

        <Border.InputBindings>
            <MouseBinding MouseAction="LeftClick" Command="{Binding OpenImageCommand}"/>
        </Border.InputBindings>

        <Grid>

            <Grid.RowDefinitions>
                
                <!-- Image thumbnail-->
                <RowDefinition Height="*"/>
                
                <!-- Send/Receive date -->
                <RowDefinition Height="Auto"/>

                <!-- Image size in bytes -->
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            
            <!--Background for progress or state indicators-->
            <Border Grid.Row="0" 
                    Width="50"
                    Panel.ZIndex="1"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Height="{Binding Width,RelativeSource={RelativeSource Self}}"
                    CornerRadius="{Binding Width,RelativeSource={RelativeSource Self}}"
                    Background="{StaticResource OpaqueWhiteBrush}">
                <Border.Visibility>
                    <MultiBinding Converter="{conv:InverseFileStateToVisibilityMultiConverter}" FallbackValue="Collapsed">
                        <Binding Path="IsFileLoaded"/>
                        <Binding Path="FileState"/>
                    </MultiBinding>
                </Border.Visibility>

                <!-- State of file: Error or download pending -->
                <iconPacks:PackIconMaterial Kind="{Binding FileState,
                                                       Converter={conv:FileChatStateToVisibilityConverter},
                                                       ConverterParameter=Image}"
                                            Grid.Column="0"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Foreground="White"/>
            </Border>

            <!--Animation to show load progress-->
            <Controls:ProgressRing Grid.Row="0" 
                                   Width="40" 
                                   Visibility="{Binding IsLoading,Converter={conv:BoolToVisibilityGoneConverter},FallbackValue=Collapsed}"
                                   Foreground="White"
                                   Panel.ZIndex="2"
                                   HorizontalContentAlignment="Center"/>

            <!--Progress circle indicator-->
            <ucontrols:ProgressCircleControl Grid.Row="0" 
                                             Radius="20"
                                             Minimum="0"
                                             Maximum="{Binding FileSize}"
                                             Thickness="5"
                                             Value="{Binding CurrentReadBytes}"
                                             Panel.ZIndex="3"
                                             StrokeBackground="{StaticResource OpaqueGrayColorBrush}"
                                             StrokeBrush="White"
                                             Visibility="{Binding IsReadingFile,Converter={conv:BoolToVisibilityGoneConverter}}"/>

            <!-- Image thumbnail -->
            <Image Grid.Row="0" 
                   Source="{Binding Thumbnail,Converter={conv:BytesToImageConverter}, TargetNullValue={StaticResource DefaultImage}}"
                   MaxHeight="420"
                   MaxWidth="420"
                   depend:ClipFromBorderProperty.Value="True"
                   Stretch="Uniform"
                   StretchDirection="DownOnly"
                   ContextMenu="{StaticResource fileMessageContextMenu}"
                   Margin="5 5 5 0"/>

            <!-- Send/Receive date -->
            <TextBlock Grid.Row="1" 
                       Text="{Binding SendDate,Converter={conv:TimeToStringConverter}}"
                       Foreground="{StaticResource DarkGrayBrush}"
                       FontSize="{StaticResource SmallFontSize}"
                       FontFamily="{StaticResource RobotoRegularFont}"
                       Margin="5 5 0 0"
                       Visibility="{Binding IsMessageLoaded,Converter={conv:BoolToVisibilityGoneConverter}}"/>

            <!-- Image size in bytes -->
            <TextBlock Grid.Row="2"
                       Foreground="{StaticResource DarkGrayBrush}"
                       FontSize="{StaticResource SmallFontSize}"
                       FontFamily="{StaticResource RobotoRegularFont}"
                       Margin="5 0 0 10"
                       Visibility="{Binding IsMessageLoaded,Converter={conv:BoolToVisibilityGoneConverter}}">
                        <Run Text="{Binding FileSize,Converter={conv:SizeUnitConverter}}"/>
                        <Run Text="{Binding FileSize,Converter={conv:SizeToUnitNameConverter}}"/>
            </TextBlock>

        </Grid>
    </Border>
</UserControl>
