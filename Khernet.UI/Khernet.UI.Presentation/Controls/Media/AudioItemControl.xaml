<UserControl x:Class="Khernet.UI.Controls.AudioItemControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Khernet.UI.Controls"
             xmlns:vm="clr-namespace:Khernet.UI"
             xmlns:conv="clr-namespace:Khernet.UI.Converters"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:ucontrols="clr-namespace:Khernet.UI.Controls"
             xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
             d:DataContext="{d:DesignInstance {x:Type vm:AudioChatMessageDesingModel}, IsDesignTimeCreatable=True}"
             mc:Ignorable="d" 
             Loaded="UserControl_Loaded"
             Unloaded="UserControl_Unloaded">
    <Grid >
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="55"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!-- Play button border -->
        <Border Grid.Column="0"
                BorderBrush="{StaticResource BlueBrush}"
                Height="55"
                HorizontalAlignment="Center"
                Width="{Binding Height, RelativeSource={RelativeSource Self}}"
                CornerRadius="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"
                BorderThickness="1"
                ClipToBounds="True">
        </Border>

        <!-- State of file: Error or download pending -->
        <Button Grid.Column="0" 
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Height="55"
                Style="{DynamicResource EllipticalButton}"
                Command="{Binding OpenMediaCommand}"
                Visibility="{Binding IsFileLoaded,Converter={conv:BoolToVisibilityGoneConverter}}">

            <Button.Cursor>
                <MultiBinding Converter="{conv:ChatStateToCursorMultiConverter}" FallbackValue="Arrow">
                    <Binding Path="IsFileLoaded"/>
                    <Binding Path="State"/>
                </MultiBinding>
            </Button.Cursor>

            <iconPacks:PackIconMaterial Kind="{Binding FileState,Converter={conv:FileChatStateToVisibilityConverter},
                                                             ConverterParameter=Audio}"
                                        Grid.Column="0"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"/>

        </Button>

        <!--Play/Pause button-->
        <Button Grid.Column="0" 
                x:Name="playButton"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Command="{Binding OpenMediaCommand}"
                CommandParameter="{Binding}"
                Click="Button_Click"
                Cursor="Hand"
                Height="55"
                Style="{DynamicResource EllipticalButton}">


            <Button.Visibility>
                <MultiBinding Converter="{conv:AudioStateToVisibilityMultiConverter}" FallbackValue="Collapsed">
                    <Binding Path="IsFileLoaded"/>
                    <Binding Path="FileState"/>
                </MultiBinding>
            </Button.Visibility>

            <Grid>

                <iconPacks:PackIconMaterial Kind="{Binding CurrentPlayer.State, ConverterParameter=audioMessage, 
                                                           Converter={conv:MediaStatesToStringConverter}, 
                                                           FallbackValue=Play, 
                                                           RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ucontrols:AudioItemControl}}, 
                                                           TargetNullValue=Play}"
                                            Width="15"/>
            </Grid>
        </Button>

        <!--Animation to show load progress-->
        <Controls:ProgressRing Height="40" 
                               Width="40"
                               Grid.Column="0"
                               Foreground="{StaticResource BlueBrush}"
                               Visibility="{Binding IsLoading, Converter={conv:BoolToVisibilityGoneConverter}, FallbackValue=Collapsed}"/>

        <!--Progress circle indicator-->
        <ucontrols:ProgressCircleControl Radius="20"
                                         Grid.Column="0"
                                         Minimum="0"
                                         Maximum="{Binding FileSize}"
                                         Thickness="5"
                                         Value="{Binding CurrentReadBytes}"
                                         Panel.ZIndex="2"
                                         StrokeBackground="White"
                                         StrokeBrush="{StaticResource BlueBrush}"
                                         Visibility="{Binding IsReadingFile, Converter={conv:BoolToVisibilityGoneConverter}}"/>

        <!-- Audio file information-->
        <Grid Grid.Column="1"
              VerticalAlignment="Center"
              Margin="5 0 0 0">

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!--Audio track name-->
            <TextBlock Text="{Binding FileName}"
                       Grid.Row="0"
                       FontFamily="{StaticResource RobotoBoldFont}"
                       Style="{StaticResource TextblockItemStyle}"
                       TextWrapping="WrapWithOverflow"
                       Width="250"
                       HorizontalAlignment="Left"/>

            <StackPanel Grid.Row="1"
                        Orientation="Horizontal"
                        Visibility="{Binding IsReadingFile, Converter={conv:BoolToVisibilityGoneConverter}, FallbackValue=Collapsed}">

                <!--File size-->
                <TextBlock Style="{StaticResource TextblockItemStyle}">
                    <Run Text="{Binding CurrentReadBytes,Converter={conv:SizeUnitConverter}}"/>
                    <Run Text=" / "/>
                    <Run Text="{Binding FileSize,Converter={conv:SizeUnitConverter}}"/>
                    <Run Text="{Binding FileSize,Converter={conv:SizeToUnitNameConverter}}"/>
                </TextBlock>
            </StackPanel>

            <StackPanel Grid.Row="1"
                        Orientation="Horizontal"
                        Visibility="{Binding IsFileLoaded, Converter={conv:BoolToVisibilityGoneConverter}, FallbackValue=Collapsed}">

                <!-- Current time/Length of audio-->

                <TextBlock Text="{Binding CurrentPlayer.Time, Converter={conv:NumberToTimeStringConverter}, 
                           FallbackValue=00:00, 
                           RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ucontrols:AudioItemControl}}}"
                           Visibility="{Binding CurrentPlayer.State,Converter={conv:MediaStatesToVisibilityConverter},
                                                RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ucontrols:AudioItemControl}},
                                                TargetNullValue=Collapsed,
                                                FallbackValue=Collapsed}"/>

                <TextBlock Text=" / "
                           Visibility="{Binding CurrentPlayer.State,Converter={conv:MediaStatesToVisibilityConverter},
                                                RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ucontrols:AudioItemControl}},
                                                TargetNullValue=Collapsed,
                                                FallbackValue=Collapsed}"/>

                <!-- Duration of audio -->
                <TextBlock Text="{Binding Duration, Converter={conv:TimeSpanToStringConverter}}"/>

                <!-- Separator -->
                <TextBlock Text=" | "
                           Foreground="{StaticResource DarkGrayBrush}"/>

                <!-- The size of audio file -->
                <TextBlock Foreground="{StaticResource DarkGrayBrush}">
                    <Run Text="{Binding FileSize,Converter={conv:SizeUnitConverter}}"/>
                    <Run Text="{Binding FileSize,Converter={conv:SizeToUnitNameConverter}}"/>
                </TextBlock>
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>
